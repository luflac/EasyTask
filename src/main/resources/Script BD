CREATE TABLE client (
    id_client SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    email VARCHAR(150) NOT NULL UNIQUE
);

CREATE TABLE collaborator (
    id_collaborator SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(150) NOT NULL UNIQUE,
    phone VARCHAR(20),
    position VARCHAR(255),
    access_level VARCHAR(50) NOT NULL DEFAULT 'BASICO'
);

CREATE TABLE phase (
    id_phase SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    sequence INTEGER NOT NULL
);

CREATE TABLE task (
    id_task SERIAL PRIMARY KEY,
    id_phase INTEGER NOT NULL REFERENCES phase(id_phase),
    id_client INTEGER NOT NULL REFERENCES client(id_client),
    id_collaborator INTEGER NOT NULL REFERENCES collaborator(id_collaborator),
    title VARCHAR(255) NOT NULL,
    description TEXT,
    priority SMALLINT NOT NULL,
    due_date DATE,
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE comment (
    id_comment SERIAL PRIMARY KEY,
    content TEXT NOT NULL,
    date_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id_task INTEGER NOT NULL,
    id_collaborator INTEGER NOT NULL,

    CONSTRAINT fk_task_comment
        FOREIGN KEY (id_task)
        REFERENCES task(id_task)
        ON DELETE CASCADE,

    CONSTRAINT fk_collaborator_comment
        FOREIGN KEY (id_collaborator)
        REFERENCES collaborator(id_collaborator)
        ON DELETE CASCADE
);
